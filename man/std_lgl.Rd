% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-export.R
\name{std_lgl}
\alias{std_lgl}
\title{Standardize \code{logical} Representations in Various Formats}
\usage{
std_lgl(
  x,
  true = c("YES", "POS", "ALIVE", "ON THERAPY"),
  false = c("NO", "NEG", "EXPIRED", "DECEASED", "OFF THERAPY"),
  na = c("^$", "N/?A", "-999[0-9]", "UNSPEC", "NO DATA", "UNKN?", "INCONCLUSIVE",
    "NOT? (?:EVAL|APPL|DONE|DETER)", "EQUIVOCAL", "NEVER DROPPED BELOW"),
  std_chr = TRUE,
  warn = TRUE
)
}
\arguments{
\item{x}{A vector to convert}

\item{true}{Regular expressions corresponding to \code{TRUE}; these will be
combined using \code{"|"}}

\item{false}{Regular expressions corresponding to \code{FALSE}; these will be
combined using \code{"|"}}

\item{na}{Regular expressions corresponding to \code{NA}; these will be combined
using \code{"|"}}

\item{std_chr}{Whether to standardized a \code{character} vector before parsing}

\item{warn}{Whether to warn if \code{character} strings were not converted to
\code{logical}}
}
\value{
A \code{logical} vector
}
\description{
\code{std_lgl()} converts other classes to \code{logical} vectors. All but \code{character}
use \code{as.logical()}; \code{character} vectors are converted by first (optionally)
standardizing with \code{std_chr} and then assigning logical value based on the
regular expression in \code{true}, \code{false}, and \code{na}.
}
