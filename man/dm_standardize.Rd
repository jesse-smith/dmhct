% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dm_standardize.R
\name{dm_standardize}
\alias{dm_standardize}
\title{Standardize Column Values in a local \code{dm} for MLinHCT}
\usage{
dm_standardize(dm_local = dm_extract(.legacy = FALSE), quiet = FALSE)
}
\arguments{
\item{dm_local}{A local \code{dm} object containing MLinHCT data from \code{dm_extract()}}

\item{quiet}{Whether to suppress progress messages}
}
\value{
The input \code{dm} with standarized column values
}
\description{
\code{dm_standardize()} takes a local version of the SQL server as input and
standardizes all columns across all tables. Standardization procedures are
based on both column type and the typing prefix of the column name. Specifically,
columns are standardized using the following workflow:

\enumerate{
\item Columns with type \code{character} or chr/cat/lgl/mcat/intvl prefixes are
passed to \code{std_chr()}
\item Columns with type \code{logical} or the lgl prefix are passed to \code{std_lgl()}
\item Columns with type \code{numeric} or \code{integer}, or num/pct prefixes, are passed
to \code{std_num()}
\item Columns with the intvl prefix are passed to \code{std_intvl()}
\item Column with types \code{Date}, \code{POSIXct}, or \code{POSIXlt}, or with dt/dttm/date
prefixes, are passed to \code{std_date()}
}

After standardization, tables are sorted into alphabetical order before
returning.
}
