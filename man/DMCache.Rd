% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dm_cache.R
\docType{data}
\name{DMCache}
\alias{DMCache}
\alias{dm_cache}
\title{\code{dm} Cache Functions}
\description{
Functions for reading, writing, and checking/checksumming caches of \code{dm}
objects
}
\keyword{Cache}
\keyword{Directory}
\keyword{File}
\keyword{Object}
\keyword{Specified}
\keyword{`dm`}
\keyword{a}
\keyword{and}
\keyword{datasets}
\keyword{in}
\keyword{internal}
\keyword{the}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DMCache-write}{\code{DMCache$write()}}
\item \href{#method-DMCache-read}{\code{DMCache$read()}}
\item \href{#method-DMCache-check}{\code{DMCache$check()}}
\item \href{#method-DMCache-checksum}{\code{DMCache$checksum()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DMCache-write"></a>}}
\if{latex}{\out{\hypertarget{method-DMCache-write}{}}}
\subsection{Method \code{write()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DMCache$write(
  dm,
  checksum,
  file,
  dir = path_create("~", ".cache_dmhct"),
  n_threads = max(1L, parallel::detectCores()\%/\%2L)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dm}}{\verb{[dm]} A \code{dm} object}

\item{\code{checksum}}{\verb{[chr(1)]} The hash of the \code{dm} object}

\item{\code{file}}{\verb{[chr(1)]} The file stem to use for the cache objects}

\item{\code{dir}}{\verb{[chr(1)]} The directory in which to save the cache objects}

\item{\code{n_threads}}{\verb{[int(1)]} The number of threads to use when serializing
the \code{dm} object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\verb{[dm]} The \code{dm} object (invisibly)
Read \code{dm} Data or its Checksum from a the Specified Cache
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DMCache-read"></a>}}
\if{latex}{\out{\hypertarget{method-DMCache-read}{}}}
\subsection{Method \code{read()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DMCache$read(
  obj = c("data", "checksum"),
  file,
  dir = path_create("~", ".cache_dmhct"),
  fail = TRUE,
  n_threads = if (obj == "data") max(1L, parallel::detectCores()\%/\%2L) else 1L
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{obj}}{\verb{[chr(1)]} What to read from the cache}

\item{\code{file}}{\verb{[chr(1)]} The file stem to use for the cache objects}

\item{\code{dir}}{\verb{[chr(1)]} The directory in which to save the cache objects}

\item{\code{fail}}{\verb{[lgl(1)]} Whether to error if \code{dir}/\code{obj}_\code{file} combo does
not exist}

\item{\code{n_threads}}{\verb{[int(1)]} The number of threads to use when
de-serializing the object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\verb{[dm|chr(1)]} The de-serialized object
Check Hash for \code{dm} Object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DMCache-check"></a>}}
\if{latex}{\out{\hypertarget{method-DMCache-check}{}}}
\subsection{Method \code{check()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DMCache$check(
  checksum,
  file,
  dir = path_create("~", ".cache_dmhct"),
  n_threads = max(1L, parallel::detectCores()\%/\%2L)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{checksum}}{\verb{[chr(1)]} The hash of the \code{dm} object}

\item{\code{file}}{\verb{[chr(1)]} The file stem to use for the cache objects}

\item{\code{dir}}{\verb{[chr(1)]} The directory in which to save the cache objects}

\item{\code{n_threads}}{\code{int(1)} The number of threads to use when
de-serializing the cached checksum}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\verb{[lgl(1)]} Whether the passed \code{checksum} and cached \code{checksum}
are identical
Hash a \code{dm} Object

\code{dm_checksum()} creates a checksum by hashing each table + its name individually,
sorting by name, and hashing a list of the results. This means that the hash
does not change when the ordering of the tables change in the dm, but does
change if any data or names are added, deleted, or modified.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DMCache-checksum"></a>}}
\if{latex}{\out{\hypertarget{method-DMCache-checksum}{}}}
\subsection{Method \code{checksum()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DMCache$checksum(dm)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dm}}{\verb{[dm]} The \code{dm} object to hash}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\verb{[chr(1)]} The hash string of the object
}
}
}
